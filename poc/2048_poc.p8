pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--main
function _init()
 t=-32768
 startgame()
end

function _update()
 t+=1
 dobutton()
end

function _draw()
cls()
map()
--printfield()
draw_squares()
end
-->8
--setup

function startgame()
 field={}
 for i=1,4 do
 	field[i]={}
 	for j=1,4 do
 		field[i][j]=0
 	end
 end
 --start w/ 2 squares
 addnewrfpoint()
 addnewrfpoint()
end
-->8
--field utils
function rfpoint()
 return flr(rnd(4))+1
end

function emptycount(_field)
	local zcnt=0
 for i=1,4 do
 	for j=1,4 do
 		if (field[i][j]==0) zcnt+=1
 	end
 end
 return zcnt
end

--returns x,y,isfound
function getropenfpoint()
 if emptycount()==0 then
  return -1,-1,false
 end
 local _x,_y
 while true do
  _x=rfpoint()
  _y=rfpoint()
  if field[_x][_y]==0 then
   return _x,_y,true
  end
 end 
end

function addnewrfpoint()
	local _x,_y,_z=getropenfpoint()
	if not _z then
	 return -1,-1,false
	end
	local v=2
	if(rnd()<=0.2) v=4
	field[_x][_y]=v
	return _x,_y,true
end

function remove_0s(_vals)
 local nv={}
 for i=1,4 do
  if _vals[i]>0 then
   add(nv,_vals[i])
  end
 end
 for j=1,4-#nv do
  add(nv,0)
 end
 return nv
end

--
--move-related functions
--
function combine_vals(_vals)
 printh("checking "..prncomb(_vals))
	assert(#_vals<=4,"too many values")
 --all zero?
 local allz=true
 for z=1,4 do
  if _vals[z]!=0 then
   allz=false
   break
  end
 end
 if (allz) return _vals
 --combine 4 values down per game rules  
 _vals = remove_0s(_vals)
 printh("c0:"..prncomb(_vals))
 for i=1,3 do
  if _vals[i]==_vals[i+1] then
   _vals[i]*=2
   _vals[i+1]=0
  end
 end
 printh("c1:"..prncomb(_vals))
 return remove_0s(_vals)
end

--reverse the val for right and down moves
function revr_val(_val)
 local _rval={}
 printh("rev0:"..prncomb(_val))
 for j=4,1,-1 do
  add(_rval,_val[j])
 end
 printh("rev1:"..prncomb(_rval))
 return _rval
end

function doup_move()
 for _x=1,4 do
  local nv=combine_vals(field[_x])
  field[_x]=nv
 end 
end

function dodown_move()
 for _x=1,4 do
  local rv=revr_val(field[_x])
  local nv=combine_vals(rv)
  field[_x]=revr_val(nv)
 end 
end

function doleft_move()
 for _y=1,4 do
  local combme={}
  for _x=1,4 do
   add(combme,field[_x][_y])
   if _x==4 then
    local nv=combine_vals(combme)
    printh("l:"..prncomb(nv))
    for _xx=1,4 do
     field[_xx][_y]=nv[_xx]
    end
   end
  end
 end
end

function doright_move()
 for _y=1,4 do
  local combme={}
  for _x=4,1,-1 do
   add(combme,field[_x][_y])
   if _x==1 then
    local nv=combine_vals(combme)
    nv=revr_val(nv)
    printh("r:"..prncomb(nv))
    for _xx=4,1,-1 do
     field[_xx][_y]=nv[_xx]
    end
   end
  end
 end
end

-->8
--draw

function gsqr_color(n)
 if n<=4 then
  return 11
 elseif n<=16 then
  return 3
 elseif n<=64 then
  return 2
 elseif n<=256 then
  return 8
 elseif n<=1024 then
  return 14
 elseif n<=2048 then
  return 7
 else
  assert(false,"out of range n")
 end 
end

function draw_square(_x,_y)
 local relx=(_x-1)*32
 local rely=(_y-1)*32
 local val=field[_x][_y]
 if val>0 then
  rectfill(relx+1,rely+1,relx+30,rely+30,gsqr_color(val))
  --pset(relx,rely,11)
  local len=#tostr(val)
  local off=14-flr(len/2)
  --if (#tostr(val) == 3) off+=1
  --if (#tostr(val) == 4) off-=3
 	print(val,relx+off-len,rely+13,7)
 end
end

function draw_squares()
 for i=1,4 do
 	for j=1,4 do
			draw_square(i,j)
 	end
 end

end
-->8
--update

function dobutton()
 if btnp(⬅️) then
  print("⬅️")
  doleft_move()
  --these here for testing
  --need proper checks
  addnewrfpoint()
 elseif btnp(➡️) then
  printh("➡️")
  doright_move()
  addnewrfpoint()
 elseif btnp(⬆️) then
  printh("⬆️")
  doup_move()
  addnewrfpoint()
 elseif btnp(⬇️) then
  print("⬇️")
  dodown_move()
  addnewrfpoint()
 elseif btnp(❎) then
 
 elseif btnp(🅾️) then
 
 end
 
end
-->8
--debug

function printfield()
 for i=1,4 do
 	for j=1,4 do
 	 local p=i..","..j..":"..field[i][j]
   print(p,3)
 	end
 end
end

function prncomb(_v)
 local out=""
 for i=1,4 do
  out=out..tostr(_v[i])..";"
 end
 return out
end
__gfx__
000000008008d0080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000d00000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770008000000d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000800d80080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006600000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006600000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006600000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006600000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
60606060060606066060606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
60606060060606066060606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
2100002022000020220000202200002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100001012000010120000101200001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400001300000013000000130000001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100001012000010120000101200001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400001300000013000000130000001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100001012000010120000101200001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400001300000013000000130000001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100001012000010120000101200001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
